#!/usr/bin/env node
import s from"oneline";import{cac as r}from"cac";var i="1.0.0-alpha.1",e=r("eswatch");e.command("<...entry-points>","Build files with esbuild").action(async(t,o)=>{let{initEsbuild:n}=await import("./initEsbuild.js");await n(t,o)});e.option("--watch <...files>","Directory/files to watch (supports glob patterns)");e.option("--standalone","Include dependencies on bundle");e.option("--clear","Clear screen on each reload");e.option("--run [entry]","Entry point for the build");e.option("--keepfiles","Don't delete files from the target output directory before build");e.option("--bundle","Bundle all dependencies into the output files");e.option("--platform <platform>","Platform target (browser | node, default browser)");e.option("--minify","Remove whitespace, shorten identifiers and syntax");e.option("--external <module>","Exclude specific modules from the bundle");e.option("--format <format>",s`
    Output format (iife | cjs | esm, no default when not bundling, otherwise, default
    is iife when platform is browser and cjs when platform is node)
  `);e.option("--splitting","Enable code splitting (currently only works for esm)");e.option("--outdir <outdir>","The output directory (for multiple entry points)");e.option("--outext <outext>",'Use a custom output extension instead of ".js"');e.help();e.version(i);e.parse();
