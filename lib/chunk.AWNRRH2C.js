var y=Object.create,i=Object.defineProperty,h=Object.getPrototypeOf,P=Object.prototype.hasOwnProperty,E=Object.getOwnPropertyNames,b=Object.getOwnPropertyDescriptor,w=t=>i(t,"__esModule",{value:!0}),C=(t,e)=>()=>(e||(e={exports:{}},t(e.exports,e)),e.exports),F=(t,e,s)=>{if(w(t),e&&typeof e=="object"||typeof e=="function")for(let n of E(e))!P.call(t,n)&&n!=="default"&&i(t,n,{get:()=>e[n],enumerable:!(s=b(e,n))||s.enumerable});return t},u=t=>t&&t.__esModule?t:F(i(t!=null?y(h(t)):{},"default",{value:t,enumerable:!0}),t),c=C((Z,g)=>{"use strict";g.exports=t=>{let e=/^\\\\\?\\/.test(t),s=/[^\u0000-\u0080]+/.test(t);return e||s?t:t.replace(/\\/g,"/")}});import{existsSync as L}from"fs";var O=async t=>{try{return await new Promise((e,s)=>L(t)?e(t):s(`Couldn't find ${t} entry point`))}catch(e){throw new Error(e)}},a=O;import l from"path";import{spawn as I}from"child_process";var S=t=>{let e=l.parse(t).name;return e==="index"},v=(t,e)=>{let s=l.parse(t).name,n=e.outext||".js",r=s+n,o=l.resolve(e.outdir,r);return o},j=(t,e)=>{let s=t.find(S),n=s||t[0];return v(n,e)},R=(t,e)=>{if(typeof e.run=="string")return e.run;{let s=j(t,e);return"node "+s}},k=(t,e)=>{let s=R(t,e),[n]=s.split(" "),r=s.split(" ").slice(1),o=I(n,r,{stdio:"inherit"});return o},G=k;var m=u(c());import T from"path";import B from"tiny-glob";var D=async t=>{let e=T.normalize(t),s=m.default(e),n=await B(s),r=n.map(m.default);return r},p=D;import x from"path";import{fileURLToPath as J}from"url";import{builtinModules as N}from"module";var z=x.dirname(J(import.meta.url)),U=async t=>{let e=t.outext?{".js":t.outext}:{".js":".js"},s=[t.outdir||[z,"build"]].flat(),n=x.resolve(...s),r=[...N];if(!t.standalone){let{getDependencies:o}=await import("./helpers/index.js");r.push(...await o())}return t.external&&r.push(...t.external),{outExtension:e,outdir:n,external:r}},d=U;import V from"is-glob";var W=async t=>V(t)?await p(t):await a(t),A=async t=>{let e=t.map(W),s=await Promise.all(e),n=s.flat();return n},f=A;import{readFileSync as M}from"fs";import _ from"find-up";var ft=async()=>{let t=await _("package.json");if(t){let e=M(t,{encoding:"utf-8"}),s=JSON.parse(e),n=Object.keys(s.dependencies),r=Object.keys(s.devDependencies);return[...n,...r]}return[]};var xt=async(t,e)=>{let s=await f(t),{external:n,outExtension:r,outdir:o}=await d(e);return{outdir:o,outExtension:r,entryPoints:s,bundle:e.bundle,format:e.format,incremental:e.incremental,minify:e.minify,platform:e.platform,...e.bundle&&{external:n,splitting:e.splitting}}};export{xt as a,ft as b,a as c,p as d,f as e,d as f,G as g};
