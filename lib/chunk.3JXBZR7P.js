var x=Object.create,p=Object.defineProperty,P=Object.getPrototypeOf,E=Object.prototype.hasOwnProperty,w=Object.getOwnPropertyNames,b=Object.getOwnPropertyDescriptor,C=t=>p(t,"__esModule",{value:!0}),O=(t,e)=>()=>(e||(e={exports:{}},t(e.exports,e)),e.exports),F=(t,e,s)=>{if(C(t),e&&typeof e=="object"||typeof e=="function")for(let o of w(e))!E.call(t,o)&&o!=="default"&&p(t,o,{get:()=>e[o],enumerable:!(s=b(e,o))||s.enumerable});return t},g=t=>t&&t.__esModule?t:F(p(t!=null?x(P(t)):{},"default",{value:t,enumerable:!0}),t),c=O((Q,y)=>{"use strict";y.exports=t=>{let e=/^\\\\\?\\/.test(t),s=/[^\u0000-\u0080]+/.test(t);return e||s?t:t.replace(/\\/g,"/")}});import{existsSync as L}from"fs";var I=async t=>{try{return await new Promise((e,s)=>L(t)?e(t):s(`Couldn't find ${t} entry point`))}catch(e){throw new Error(e)}},l=I;import{spawn as v}from"child_process";var S=t=>{let e=typeof t.run=="string"?t.run:`node --experimental-specifier-resolution=node ${t.outdir}`,[s]=e.split(" "),o=e.split(" ").slice(1),r=v(s,o,{stdio:"inherit"});return r},j=S;var m=g(c());import k from"path";import D from"tiny-glob";var G=async t=>{let e=k.normalize(t),s=m.default(e),o=await D(s),r=o.map(m.default);return r},d=G;import R from"minimist";var J=()=>{let t=R(process.argv.slice(2));return t},a=J;import h from"path";import{fileURLToPath as _}from"url";import{builtinModules as N}from"module";var z=h.dirname(_(import.meta.url)),B=async()=>{let t=a(),e=await f(t),s=t.outext?{".js":t.outext}:{".js":".js"},o=[t.outdir||[z,"build"]].flat(),r=h.resolve(...o),n=[...N];if(!t.standalone){let{getDependencies:i}=await import("./helpers/index.js");n.push(...await i())}return t.external&&n.push(...t.external),{entryPoints:e,outExtension:s,outdir:r,external:n}},u=B;import M from"is-glob";var T=async t=>{let e=t._.length<1&&!t.entry;if(e)throw new Error("Missing entry point");let s=t.entry?[t.entry]:t._,o=s.map(async i=>M(i)?await d(i):await l(i)),r=await Promise.all(o),n=r.flat();return n},f=T;import{readFileSync as U}from"fs";import V from"find-up";var dt=async()=>{let t=await V("package.json");if(t){let e=U(t,{encoding:"utf-8"}),s=JSON.parse(e),o=Object.keys(s.dependencies),r=Object.keys(s.devDependencies);return[...o,...r]}return[]};var gt=async()=>{let t=a(),{entryPoints:e,external:s,outExtension:o,outdir:r}=await u();return{entryPoints:e,outdir:r,outExtension:o,bundle:t.bundle,format:t.format,incremental:t.incremental,minify:t.minify,platform:t.platform,...t.bundle&&{external:s,splitting:t.splitting}}};export{dt as a,a as b,gt as c,l as d,j as e,d as f,f as g,u as h};
