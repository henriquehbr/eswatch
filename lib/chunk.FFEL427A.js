var y=Object.create,i=Object.defineProperty,h=Object.getPrototypeOf,P=Object.prototype.hasOwnProperty,E=Object.getOwnPropertyNames,b=Object.getOwnPropertyDescriptor,w=t=>i(t,"__esModule",{value:!0}),C=(t,e)=>()=>(e||(e={exports:{}},t(e.exports,e)),e.exports),F=(t,e,n)=>{if(w(t),e&&typeof e=="object"||typeof e=="function")for(let s of E(e))!P.call(t,s)&&s!=="default"&&i(t,s,{get:()=>e[s],enumerable:!(n=b(e,s))||n.enumerable});return t},u=t=>t&&t.__esModule?t:F(i(t!=null?y(h(t)):{},"default",{value:t,enumerable:!0}),t),c=C((q,g)=>{"use strict";g.exports=t=>{let e=/^\\\\\?\\/.test(t),n=/[^\u0000-\u0080]+/.test(t);return e||n?t:t.replace(/\\/g,"/")}});import{existsSync as L}from"fs";var a=async t=>{try{return await new Promise((e,n)=>L(t)?e(t):n(`Couldn't find ${t} entry point`))}catch(e){throw new Error(e)}};import l from"path";import{spawn as O}from"child_process";var I=t=>{let e=l.parse(t).name;return e==="index"},S=(t,e)=>{let n=l.parse(t).name,s=e.outext||".js",r=n+s,o=l.resolve(e.outdir,r);return o},v=(t,e)=>{let n=t.find(I),s=n||t[0];return S(s,e)},j=(t,e)=>{if(typeof e.run=="string")return e.run;{let n=v(t,e);return"node "+n}},R=(t,e)=>{let n=j(t,e),[s]=n.split(" "),r=n.split(" ").slice(1),o=O(s,r,{stdio:"inherit"});return o};var m=u(c());import k from"path";import D from"tiny-glob";var p=async t=>{let e=k.normalize(t),n=m.default(e),s=await D(n),r=s.map(m.default);return r};import x from"path";import{fileURLToPath as G}from"url";import{builtinModules as T}from"module";var B=x.dirname(G(import.meta.url)),d=async t=>{let e=t.outext?{".js":t.outext}:{".js":".js"},n=[t.outdir||[B,"build"]].flat(),s=x.resolve(...n),r=[...T];if(!t.standalone){let{getDependencies:o}=await import("./helpers/index.js");r.push(...await o())}return t.external&&r.push(...t.external),{outExtension:e,outdir:s,external:r}};import J from"is-glob";var N=async t=>J(t)?await p(t):await a(t),f=async t=>{let e=t.map(N),n=await Promise.all(e),s=n.flat();return s};import{readFileSync as it}from"fs";import lt from"find-up";var z=async(t,e)=>{let n=await f(t),{external:s,outExtension:r,outdir:o}=await d(e);return{outdir:o,outExtension:r,entryPoints:n,bundle:e.bundle,format:e.format,incremental:e.incremental,minify:e.minify,platform:e.platform,...e.bundle&&{external:s,splitting:e.splitting}}};export{it as a,a as b,lt as c,z as d,p as e,d as f,f as g,R as h};
