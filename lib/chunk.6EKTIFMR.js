var E=Object.create,l=Object.defineProperty,w=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty,C=Object.getOwnPropertyNames,O=Object.getOwnPropertyDescriptor,F=t=>l(t,"__esModule",{value:!0}),L=(t,e)=>()=>(e||(e={exports:{}},t(e.exports,e)),e.exports),I=(t,e,s)=>{if(F(t),e&&typeof e=="object"||typeof e=="function")for(let n of C(e))!b.call(t,n)&&n!=="default"&&l(t,n,{get:()=>e[n],enumerable:!(s=O(e,n))||s.enumerable});return t},x=t=>t&&t.__esModule?t:I(l(t!=null?E(w(t)):{},"default",{value:t,enumerable:!0}),t),f=L((rt,h)=>{"use strict";h.exports=t=>{let e=/^\\\\\?\\/.test(t),s=/[^\u0000-\u0080]+/.test(t);return e||s?t:t.replace(/\\/g,"/")}});import S from"minimist";var v=()=>{let t=S(process.argv.slice(2));return t},r=v;import{existsSync as j}from"fs";var R=async t=>{try{return await new Promise((e,s)=>j(t)?e(t):s(`Couldn't find ${t} entry point`))}catch(e){throw new Error(e)}},m=R;import d from"path";import{spawn as k}from"child_process";var c=r(),T=t=>{let e=d.parse(t).name;return e==="index"},B=t=>{let e=d.parse(t).name,s=c.outext||".js",n=e+s,o=d.resolve(c.outdir,n);return o},D=t=>{let e=t.find(T),s=e||t[0];return B(s)},G=t=>{if(typeof c.run=="string")return c.run;{let e=D(t);return"node "+e}},J=async()=>{let{entryPoints:t}=await p(),e=G(t),[s]=e.split(" "),n=e.split(" ").slice(1),o=k(s,n,{stdio:"inherit"});return o},N=J;var u=x(f());import _ from"path";import z from"tiny-glob";var M=async t=>{let e=_.normalize(t),s=u.default(e),n=await z(s),o=n.map(u.default);return o},g=M;import P from"path";import{fileURLToPath as U}from"url";import{builtinModules as V}from"module";var W=P.dirname(U(import.meta.url)),A=async()=>{let t=r(),e=await y(t),s=t.outext?{".js":t.outext}:{".js":".js"},n=[t.outdir||[W,"build"]].flat(),o=P.resolve(...n),i=[...V];if(!t.standalone){let{getDependencies:a}=await import("./helpers/index.js");i.push(...await a())}return t.external&&i.push(...t.external),{entryPoints:e,outExtension:s,outdir:o,external:i}},p=A;import $ from"is-glob";var q=async t=>{let e=t._.length<1&&!t.entry;if(e)throw new Error("Missing entry point");let s=t.entry?[t.entry]:t._,n=s.map(async a=>$(a)?await g(a):await m(a)),o=await Promise.all(n),i=o.flat();return i},y=q;import{readFileSync as H}from"fs";import K from"find-up";var Et=async()=>{let t=await K("package.json");if(t){let e=H(t,{encoding:"utf-8"}),s=JSON.parse(e),n=Object.keys(s.dependencies),o=Object.keys(s.devDependencies);return[...n,...o]}return[]};var Ct=async()=>{let t=r(),{entryPoints:e,external:s,outExtension:n,outdir:o}=await p();return{entryPoints:e,outdir:o,outExtension:n,bundle:t.bundle,format:t.format,incremental:t.incremental,minify:t.minify,platform:t.platform,...t.bundle&&{external:s,splitting:t.splitting}}};export{Et as a,r as b,Ct as c,m as d,g as e,y as f,p as g,N as h};
