#!/usr/bin/env node
var C=Object.create,m=Object.defineProperty,F=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty,L=Object.getOwnPropertyNames,A=Object.getOwnPropertyDescriptor,I=t=>m(t,"__esModule",{value:!0}),B=(t,o)=>()=>(o||(o={exports:{}},t(o.exports,o)),o.exports),O=(t,o,e)=>{if(I(t),o&&typeof o=="object"||typeof o=="function")for(let r of L(o))!v.call(t,r)&&r!=="default"&&m(t,r,{get:()=>o[r],enumerable:!(e=A(o,r))||e.enumerable});return t},_=t=>t&&t.__esModule?t:O(m(t!=null?C(F(t)):{},"default",{value:t,enumerable:!0}),t),h=B((Y,y)=>{"use strict";y.exports=t=>{const o=/^\\\\\?\\/.test(t),e=/[^\u0000-\u0080]+/.test(t);return o||e?t:t.replace(/\\/g,"/")}});import{spawn as M}from"child_process";import{builtinModules as N}from"module";import b from"path";import T from"readline";import{fileURLToPath as W}from"url";import U from"esbuild";import S from"minimist";const V=()=>{const t=S(process.argv.slice(2));return t};var l=V;import z from"is-glob";const p=_(h());import $ from"path";import k from"tiny-glob";const G=async t=>{const o=$.normalize(t),e=p.default(o),r=await k(e),i=r.map(p.default);return i};var g=G;import{existsSync as R}from"fs";const j=async t=>{try{return await new Promise((o,e)=>R(t)?o(t):e(`Couldn't find ${t} entry point`))}catch(o){throw new Error(o)}};var w=j;const D=async t=>{const o=t._.length<1&&!t.entry;if(o)throw new Error("Missing entry point");const e=t.entry?[t.entry]:t._,r=e.map(async n=>z(n)?await g(n):await w(n)),i=await Promise.all(r),a=i.flat();return a};var P=D;const q=b.dirname(W(import.meta.url));let d,E;const s=l(),f=T.createInterface({input:process.stdin,output:process.stdout});P(s).then(t=>E=t);const H=async()=>{const t=s.format==="esm"?s.splitting:!1,o=s.outdir??b.join(q,"build"),e=[...N];if(!s.standalone){const{default:i}=await import("./getDependencies.js");e.push(...await i())}s.external&&e.push(...s.external),d?.kill();const r=await U.startService();return s.clear&&console.clear(),await r.build({bundle:s.bundle,entryPoints:E,format:s.format,minify:s.minify,outdir:o,platform:s.platform,...s.bundle&&{external:e,splitting:t}}),r.stop(),new Promise(i=>{if(s.run){f.pause();const a=typeof s.run=="string"?s.run:`node ${o}`,[n]=a.split(" "),x=a.split(" ").slice(1);d=M(n,x,{stdio:"inherit"}),d.on("close",()=>{f.resume(),s.watch?i():process.exit()})}else console.log(`${s.entry||s._.join(", ")} built successfully on ${s.outdir}`),f.close(),i()})};var c=H;const u=l(),J=async()=>{if(u.version){const{displayVersion:t}=await import("./displayVersion.js");t()}else if(u.watch){const t=await import("chokidar");t.watch(u.watch).on("ready",async()=>c()).on("change",async()=>c())}else c()};J();
