#!/usr/bin/env node
var L=Object.create,p=Object.defineProperty,O=Object.getPrototypeOf,I=Object.prototype.hasOwnProperty,B=Object.getOwnPropertyNames,v=Object.getOwnPropertyDescriptor,j=t=>p(t,"__esModule",{value:!0}),_=(t,s)=>()=>(s||(s={exports:{}},t(s.exports,s)),s.exports),G=(t,s,r)=>{if(j(t),s&&typeof s=="object"||typeof s=="function")for(let i of B(s))!I.call(t,i)&&i!=="default"&&p(t,i,{get:()=>s[i],enumerable:!(r=v(s,i))||r.enumerable});return t},R=t=>t&&t.__esModule?t:G(p(t!=null?L(O(t)):{},"default",{value:t,enumerable:!0}),t),g=_((nt,y)=>{"use strict";y.exports=t=>{const s=/^\\\\\?\\/.test(t),r=/[^\u0000-\u0080]+/.test(t);return s||r?t:t.replace(/\\/g,"/")}});import E from"esbuild";import S from"minimist";const V=()=>{const t=S(process.argv.slice(2));return t};var a=V;import z from"readline";import{spawn as $}from"child_process";const k=t=>{const s=typeof t.run=="string"?t.run:`node ${t.outdir}`,[r]=s.split(" "),i=s.split(" ").slice(1),o=$(r,i,{stdio:"inherit"});return o};var f=k;const e=a();let c;const d=z.createInterface({input:process.stdin,output:process.stdout}),l=async()=>(e.clear&&console.clear(),c?.kill(),new Promise(t=>{e.run?(d.pause(),c=f(e),c.on("close",()=>{d.resume(),e.watch?t():process.exit()})):(console.log(`${e.entry||e._.join(", ")} built successfully on ${e.outdir}`),d.close(),t())}));import U from"is-glob";const u=R(g());import D from"path";import M from"tiny-glob";const N=async t=>{const s=D.normalize(t),r=u.default(s),i=await M(r),o=i.map(u.default);return o};var P=N;import{existsSync as T}from"fs";const A=async t=>{try{return await new Promise((s,r)=>T(t)?s(t):r(`Couldn't find ${t} entry point`))}catch(s){throw new Error(s)}};var b=A;const q=async t=>{const s=t._.length<1&&!t.entry;if(s)throw new Error("Missing entry point");const r=t.entry?[t.entry]:t._,i=r.map(async m=>U(m)?await P(m):await b(m)),o=await Promise.all(i),n=o.flat();return n};var h=q;import w from"path";import{fileURLToPath as H}from"url";import{builtinModules as J}from"module";const K=w.dirname(H(import.meta.url)),Q=async t=>{const s=t.format==="esm"?t.splitting:!1,r=t.outext?{".js":t.outext}:{".js":".js"},i=t.outdir??w.join(K,"build"),o=[...J];if(!t.standalone){const{getDependencies:n}=await import("./getDependencies.js");o.push(...await n())}return t.external&&o.push(...t.external),{splitting:s,outExtension:r,outdir:i,external:o}};var x=Q;const C=async t=>{const s=await h(t),{external:r,outExtension:i,outdir:o,splitting:n}=await x(t);return{bundle:t.bundle,entryPoints:s,outExtension:i,format:t.format,minify:t.minify,outdir:o,platform:t.platform,...t.bundle&&{external:r,splitting:n}}},F=async t=>{const s=await C(t),r=t.watch&&await E.startService();if(r){const i=await import("chokidar"),{rebuild:o}=await r.build({...s,incremental:!0});i.watch(t.watch).on("ready",async()=>await Promise.all([o(),l()])).on("change",async()=>await Promise.all([o(),l()]))}else await E.build(s),await l()},W=async()=>{const t=a();if(t.version){const{displayVersion:s}=await import("./displayVersion.js");return s()}await F(t)};W();
