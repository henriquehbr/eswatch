#!/usr/bin/env node
import x from"minimist";import{spawn as h}from"child_process";import{builtinModules as y}from"module";import m from"path";import w from"readline";import{fileURLToPath as b}from"url";import g from"esbuild";const P=m.dirname(b(import.meta.url));let n;const l=w.createInterface({input:process.stdin,output:process.stdout}),v=async e=>{const o=e.entry?[e.entry]:e._,u=e.format==="esm"?e.splitting:!1,s=e.outdir??m.join(P,"build"),a=[...y];if(!e.standalone){const{default:r}=await import("./getDependencies.js");a.push(...await r())}e.external&&a.push(...e.external),n?.kill();const c=await g.startService();return e.clear&&console.clear(),await c.build({bundle:e.bundle,entryPoints:o,format:e.format,minify:e.minify,outdir:s,platform:e.platform,...e.bundle&&{external:a,splitting:u}}),c.stop(),new Promise(r=>{if(e.run){l.pause();const d=typeof e.run=="string"?e.run:`node ${s}`,[f]=d.split(" "),p=d.split(" ").slice(1);n=h(f,p,{stdio:"inherit"}),n.on("close",()=>{l.resume(),e.watch?r():process.exit()})}else console.log(`${e.entry||e._.join(", ")} built successfully on ${e.outdir}`),l.close(),r()})};var i=v;const t=x(process.argv.slice(2));t.version?import("./displayVersion.js").then(({default:e})=>e()):(import("./validateEntryPoints.js").then(({default:e})=>e(t)),t.watch?import("chokidar").then(({default:e})=>e.watch(t.watch).on("ready",async()=>i(t)).on("change",async()=>i(t))):i(t));
