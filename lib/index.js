#!/usr/bin/env node
var E=Object.create,m=Object.defineProperty,x=Object.getPrototypeOf,C=Object.prototype.hasOwnProperty,F=Object.getOwnPropertyNames,v=Object.getOwnPropertyDescriptor,L=t=>m(t,"__esModule",{value:!0}),A=(t,o)=>()=>(o||(o={exports:{}},t(o.exports,o)),o.exports),I=(t,o,n)=>{if(L(t),o&&typeof o=="object"||typeof o=="function")for(let e of F(o))!C.call(t,e)&&e!=="default"&&m(t,e,{get:()=>o[e],enumerable:!(n=v(o,e))||n.enumerable});return t},B=t=>t&&t.__esModule?t:I(m(t!=null?E(x(t)):{},"default",{value:t,enumerable:!0}),t),h=A((Q,y)=>{"use strict";y.exports=t=>{const o=/^\\\\\?\\/.test(t),n=/[^\u0000-\u0080]+/.test(t);return o||n?t:t.replace(/\\/g,"/")}});import{spawn as z}from"child_process";import{builtinModules as D}from"module";import w from"path";import M from"readline";import{fileURLToPath as N}from"url";import T from"esbuild";import O from"minimist";const _=()=>{const t=O(process.argv.slice(2));return t};var l=_;const p=B(h());import S from"path";import{existsSync as V}from"fs";import $ from"is-glob";import k from"tiny-glob";const G=async t=>{const o=S.normalize(t),n=p.default(o),e=await k(n),i=e.map(p.default);return i},R=async t=>{try{return await new Promise((o,n)=>V(t)?o(t):n(`Couldn't find ${t} entry point`))}catch(o){throw new Error(o)}},j=async t=>{const o=t._.length<1&&!t.entry;if(o)throw new Error("Missing entry point");const n=t.entry?[t.entry]:t._,e=n.map(async r=>$(r)?await G(r):await R(r)),i=await Promise.all(e),a=i.flat();return a};var g=j;const W=w.dirname(N(import.meta.url));let d,P;const s=l(),u=M.createInterface({input:process.stdin,output:process.stdout});g(s).then(t=>P=t);const U=async()=>{const t=s.format==="esm"?s.splitting:!1,o=s.outdir??w.join(W,"build"),n=[...D];if(!s.standalone){const{default:i}=await import("./getDependencies.js");n.push(...await i())}s.external&&n.push(...s.external),d?.kill();const e=await T.startService();return s.clear&&console.clear(),await e.build({bundle:s.bundle,entryPoints:P,format:s.format,minify:s.minify,outdir:o,platform:s.platform,...s.bundle&&{external:n,splitting:t}}),e.stop(),new Promise(i=>{if(s.run){u.pause();const a=typeof s.run=="string"?s.run:`node ${o}`,[r]=a.split(" "),b=a.split(" ").slice(1);d=z(r,b,{stdio:"inherit"}),d.on("close",()=>{u.resume(),s.watch?i():process.exit()})}else console.log(`${s.entry||s._.join(", ")} built successfully on ${s.outdir}`),u.close(),i()})};var c=U;const f=l(),q=async()=>{if(f.version){const{displayVersion:t}=await import("./displayVersion.js");t()}else if(f.watch){const t=await import("chokidar");t.watch(f.watch).on("ready",async()=>c()).on("change",async()=>c())}else c()};q();
