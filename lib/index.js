#!/usr/bin/env node
var O=Object.create,l=Object.defineProperty,I=Object.getPrototypeOf,L=Object.prototype.hasOwnProperty,F=Object.getOwnPropertyNames,B=Object.getOwnPropertyDescriptor,v=t=>l(t,"__esModule",{value:!0}),R=(t,o)=>()=>(o||(o={exports:{}},t(o.exports,o)),o.exports),j=(t,o,i)=>{if(v(t),o&&typeof o=="object"||typeof o=="function")for(let s of F(o))!L.call(t,s)&&s!=="default"&&l(t,s,{get:()=>o[s],enumerable:!(i=B(o,s))||i.enumerable});return t},S=t=>t&&t.__esModule?t:j(l(t!=null?O(I(t)):{},"default",{value:t,enumerable:!0}),t),g=R((rt,f)=>{"use strict";f.exports=t=>{const o=/^\\\\\?\\/.test(t),i=/[^\u0000-\u0080]+/.test(t);return o||i?t:t.replace(/\\/g,"/")}});import x from"esbuild";import _ from"minimist";const G=()=>{const t=_(process.argv.slice(2));return t};var e=G;import k from"readline";import{spawn as V}from"child_process";const $=t=>{const o=typeof t.run=="string"?t.run:`node ${t.outdir}`,[i]=o.split(" "),s=o.split(" ").slice(1),n=V(i,s,{stdio:"inherit"});return n};var d=$;let p;const m=k.createInterface({input:process.stdin,output:process.stdout}),u=async()=>{const t=e();return t.clear&&console.clear(),p?.kill(),new Promise(o=>{t.run?(m.pause(),p=d(t),p.on("close",()=>{m.resume(),t.watch?o():process.exit()})):(console.log(`${t.entry||t._.join(", ")} built successfully on ${t.outdir}`),m.close(),o())})};import A from"is-glob";const c=S(g());import z from"path";import D from"tiny-glob";const M=async t=>{const o=z.normalize(t),i=c.default(o),s=await D(i),n=s.map(c.default);return n};var y=M;import{existsSync as N}from"fs";const T=async t=>{try{return await new Promise((o,i)=>N(t)?o(t):i(`Couldn't find ${t} entry point`))}catch(o){throw new Error(o)}};var b=T;const U=async t=>{const o=t._.length<1&&!t.entry;if(o)throw new Error("Missing entry point");const i=t.entry?[t.entry]:t._,s=i.map(async a=>A(a)?await y(a):await b(a)),n=await Promise.all(s),r=n.flat();return r};var P=U;import h from"path";import{fileURLToPath as q}from"url";import{builtinModules as H}from"module";const J=h.dirname(q(import.meta.url)),K=async()=>{const t=e(),o=t.format==="esm"?t.splitting:!1,i=!!t.watch,s=t.outext?{".js":t.outext}:{".js":".js"},n=t.outdir??h.join(J,"build"),r=[...H];if(!t.standalone){const{getDependencies:a}=await import("./getDependencies.js");r.push(...await a())}return t.external&&r.push(...t.external),{splitting:o,incremental:i,outExtension:s,outdir:n,external:r}};var w=K;const E=async()=>{const t=e(),o=await P(t),{external:i,incremental:s,outExtension:n,outdir:r,splitting:a}=await w();return{bundle:t.bundle,entryPoints:o,format:t.format,incremental:s,minify:t.minify,outdir:r,outExtension:n,platform:t.platform,...t.bundle&&{external:i,splitting:a}}},Q=e(),C=async()=>{const t=await E(),o=Q.watch&&await x.startService(),i=o?o.build:x.build;return async()=>await Promise.all([i(t),u()])},W=async()=>{const t=e();if(t.version){const{displayVersion:i}=await import("./displayVersion.js");return i()}const o=await C();t.watch?(await import("chokidar")).watch(t.watch).on("ready",async()=>await o()).on("change",async()=>await o()):await o()};W();
