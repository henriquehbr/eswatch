#!/usr/bin/env node
var L=Object.create,m=Object.defineProperty,F=Object.getPrototypeOf,I=Object.prototype.hasOwnProperty,O=Object.getOwnPropertyNames,B=Object.getOwnPropertyDescriptor,v=t=>m(t,"__esModule",{value:!0}),j=(t,s)=>()=>(s||(s={exports:{}},t(s.exports,s)),s.exports),_=(t,s,r)=>{if(v(t),s&&typeof s=="object"||typeof s=="function")for(let i of O(s))!I.call(t,i)&&i!=="default"&&m(t,i,{get:()=>s[i],enumerable:!(r=B(s,i))||r.enumerable});return t},G=t=>t&&t.__esModule?t:_(m(t!=null?L(F(t)):{},"default",{value:t,enumerable:!0}),t),y=j((et,f)=>{"use strict";f.exports=t=>{const s=/^\\\\\?\\/.test(t),r=/[^\u0000-\u0080]+/.test(t);return s||r?t:t.replace(/\\/g,"/")}});import x from"esbuild";import R from"minimist";const S=()=>{const t=R(process.argv.slice(2));return t};var n=S;import k from"readline";import{spawn as V}from"child_process";const $=t=>{const s=typeof t.run=="string"?t.run:`node ${t.outdir}`,[r]=s.split(" "),i=s.split(" ").slice(1),o=V(r,i,{stdio:"inherit"});return o};var u=$;let p;const c=k.createInterface({input:process.stdin,output:process.stdout}),a=async()=>{const t=n();return t.clear&&console.clear(),p?.kill(),new Promise(s=>{t.run?(c.pause(),p=u(t),p.on("close",()=>{c.resume(),t.watch?s():process.exit()})):(console.log(`${t.entry||t._.join(", ")} built successfully on ${t.outdir}`),c.close(),s())})};import A from"is-glob";const d=G(y());import z from"path";import D from"tiny-glob";const M=async t=>{const s=z.normalize(t),r=d.default(s),i=await D(r),o=i.map(d.default);return o};var g=M;import{existsSync as N}from"fs";const T=async t=>{try{return await new Promise((s,r)=>N(t)?s(t):r(`Couldn't find ${t} entry point`))}catch(s){throw new Error(s)}};var P=T;const U=async t=>{const s=t._.length<1&&!t.entry;if(s)throw new Error("Missing entry point");const r=t.entry?[t.entry]:t._,i=r.map(async l=>A(l)?await g(l):await P(l)),o=await Promise.all(i),e=o.flat();return e};var b=U;import h from"path";import{fileURLToPath as q}from"url";import{builtinModules as H}from"module";const J=h.dirname(q(import.meta.url)),K=async t=>{const s=t.format==="esm"?t.splitting:!1,r=t.outext?{".js":t.outext}:{".js":".js"},i=t.outdir??h.join(J,"build"),o=[...H];if(!t.standalone){const{getDependencies:e}=await import("./getDependencies.js");o.push(...await e())}return t.external&&o.push(...t.external),{splitting:s,outExtension:r,outdir:i,external:o}};var w=K;const C=async t=>{const s=await b(t),{external:r,outExtension:i,outdir:o,splitting:e}=await w(t);return{bundle:t.bundle,entryPoints:s,outExtension:i,format:t.format,minify:t.minify,outdir:o,platform:t.platform,...t.bundle&&{external:r,splitting:e}}},E=async t=>{const s=await C(t),r=t.watch&&await x.startService();if(r){const i=await import("chokidar"),{rebuild:o}=await r.build({...s,incremental:!0});i.watch(t.watch).on("ready",async()=>await Promise.all([o(),a()])).on("change",async()=>await Promise.all([o(),a()]))}else await x.build(s),await a()},Q=async()=>{const t=n();if(t.version){const{displayVersion:s}=await import("./displayVersion.js");return s()}await E(t)};Q();
