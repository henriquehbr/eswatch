var P=Object.create,p=Object.defineProperty,E=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty,b=Object.getOwnPropertyNames,C=Object.getOwnPropertyDescriptor,O=t=>p(t,"__esModule",{value:!0}),L=(t,e)=>()=>(e||(e={exports:{}},t(e.exports,e)),e.exports),F=(t,e,s)=>{if(O(t),e&&typeof e=="object"||typeof e=="function")for(let o of b(e))!w.call(t,o)&&o!=="default"&&p(t,o,{get:()=>e[o],enumerable:!(s=C(e,o))||s.enumerable});return t},g=t=>t&&t.__esModule?t:F(p(t!=null?P(E(t)):{},"default",{value:t,enumerable:!0}),t),m=L((W,y)=>{"use strict";y.exports=t=>{let e=/^\\\\\?\\/.test(t),s=/[^\u0000-\u0080]+/.test(t);return e||s?t:t.replace(/\\/g,"/")}});import{existsSync as I}from"fs";var v=async t=>{try{return await new Promise((e,s)=>I(t)?e(t):s(`Couldn't find ${t} entry point`))}catch(e){throw new Error(e)}},l=v;import{spawn as j}from"child_process";var k=t=>{let e=typeof t.run=="string"?t.run:`node ${t.outdir}`,[s]=e.split(" "),o=e.split(" ").slice(1),n=j(s,o,{stdio:"inherit"});return n},S=k;var c=g(m());import D from"path";import G from"tiny-glob";var R=async t=>{let e=D.normalize(t),s=c.default(e),o=await G(s),n=o.map(c.default);return n},d=R;import J from"minimist";var _=()=>{let t=J(process.argv.slice(2));return t},a=_;import h from"path";import{fileURLToPath as N}from"url";import{builtinModules as z}from"module";var B=h.dirname(N(import.meta.url)),M=async()=>{let t=a(),e=await f(t),s=t.format==="esm"?t.splitting:!1,o=t.outext?{".js":t.outext}:{".js":".js"},n=[t.outdir||[B,"build"]].flat(),i=h.resolve(...n),r=[...z];if(!t.standalone){let{getDependencies:x}=await import("./helpers/index.js");r.push(...await x())}return t.external&&r.push(...t.external),{entryPoints:e,splitting:s,outExtension:o,outdir:i,external:r}},u=M;import T from"is-glob";var U=async t=>{let e=t._.length<1&&!t.entry;if(e)throw new Error("Missing entry point");let s=t.entry?[t.entry]:t._,o=s.map(async r=>T(r)?await d(r):await l(r)),n=await Promise.all(o),i=n.flat();return i},f=U;import{readFileSync as V}from"fs";import $ from"find-up";var ft=async()=>{let t=await $("package.json");if(t){let e=V(t,{encoding:"utf-8"}),s=JSON.parse(e),o=Object.keys(s.dependencies),n=Object.keys(s.devDependencies);return[...o,...n]}return[]};var yt=async()=>{let t=a(),{entryPoints:e,external:s,outExtension:o,outdir:n,splitting:i}=await u();return{entryPoints:e,outdir:n,outExtension:o,bundle:t.bundle,format:t.format,incremental:t.incremental,minify:t.minify,platform:t.platform,...t.bundle&&{external:s,splitting:i}}};export{yt as a,ft as b,a as c,l as d,S as e,d as f,f as g,u as h};
